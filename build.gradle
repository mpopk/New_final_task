gradle.startParameter.showStacktrace = org.gradle.api.logging.configuration.ShowStacktrace.ALWAYS
gradle.startParameter.logLevel = LogLevel.DEBUG

buildscript {
	ext {
		springBootVersion = '2.0.2.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
//apply plugin: 'war'

group = 'com.kodilla'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('com.google.code.gson:gson:2.8.2')
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	//compile('mysql:mysql-connector-java')
	compile("com.h2database:h2")
	//compile('org.postgresql:postgresql')
	compileOnly('org.projectlombok:lombok')
	compile('org.springframework.boot:spring-boot-starter-mail:2.0.0.RELEASE')
	compile('com.google.code.gson:gson:2.8.2')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.powermock:powermock-module-junit4:2.0.0-beta.5')
	testCompile('org.powermock:powermock-api-mockito2:2.0.0-beta.5')

	//providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
}

